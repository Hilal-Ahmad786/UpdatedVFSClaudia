{
    "name": "global-vize-website",
    "version": "2.0.0",
    "description": "Global Vize - Professional Visa Consultancy Website",
    "main": "index.html",
    "scripts": {
      "build": "npm run build:css && npm run build:js && npm run optimize:images",
      "build:css": "postcss css/style.css -o dist/css/style.min.css --map",
      "build:js": "webpack --mode production",
      "dev": "npm run watch:css & npm run serve",
      "watch:css": "postcss css/style.css -o dist/css/style.min.css --map --watch",
      "serve": "live-server --port=3000 --host=localhost --open=/",
      "optimize:images": "imagemin images/**/*.{jpg,jpeg,png,gif,svg,webp} --out-dir=dist/images",
      "lint:css": "stylelint css/**/*.css",
      "lint:js": "eslint js/**/*.js",
      "lint:html": "htmlhint **/*.html",
      "test": "jest",
      "lighthouse": "lighthouse http://localhost:3000 --output=html --output-path=reports/lighthouse.html",
      "performance": "npm run lighthouse && npm run pagespeed",
      "pagespeed": "psi http://localhost:3000 --strategy=mobile",
      "security": "npm audit && snyk test",
      "seo-check": "lighthouse http://localhost:3000 --only-categories=seo --output=json --output-path=reports/seo.json",
      "deploy": "npm run build && npm run test && rsync -avz --delete dist/ production:/var/www/globalvize.com.tr/",
      "clean": "rimraf dist reports",
      "precommit": "npm run lint:css && npm run lint:js && npm run lint:html",
      "generate:sitemap": "node scripts/generate-sitemap.js",
      "check:links": "blc http://localhost:3000 -ro",
      "analyze:bundle": "webpack-bundle-analyzer dist/js/bundle.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/globalvize/website.git"
    },
    "keywords": [
      "visa",
      "consultancy",
      "turkey",
      "schengen",
      "immigration",
      "travel"
    ],
    "author": "Global Vize Team",
    "license": "Proprietary",
    "devDependencies": {
      "@babel/core": "^7.23.0",
      "@babel/preset-env": "^7.23.0",
      "autoprefixer": "^10.4.16",
      "babel-loader": "^9.1.3",
      "broken-links-checker": "^0.7.8",
      "css-loader": "^6.8.1",
      "cssnano": "^6.0.1",
      "eslint": "^8.52.0",
      "htmlhint": "^1.1.4",
      "husky": "^8.0.3",
      "imagemin": "^8.0.1",
      "imagemin-cli": "^7.0.0",
      "imagemin-gifsicle": "^7.0.0",
      "imagemin-mozjpeg": "^10.0.0",
      "imagemin-pngquant": "^9.0.2",
      "imagemin-svgo": "^10.0.1",
      "imagemin-webp": "^7.0.0",
      "jest": "^29.7.0",
      "lighthouse": "^11.2.0",
      "live-server": "^1.2.2",
      "mini-css-extract-plugin": "^2.7.6",
      "postcss": "^8.4.31",
      "postcss-cli": "^10.1.0",
      "postcss-import": "^15.1.0",
      "postcss-preset-env": "^9.2.0",
      "psi": "^4.1.0",
      "rimraf": "^5.0.5",
      "snyk": "^1.1247.0",
      "stylelint": "^15.11.0",
      "stylelint-config-standard": "^34.0.0",
      "terser-webpack-plugin": "^5.3.9",
      "webpack": "^5.89.0",
      "webpack-bundle-analyzer": "^4.9.1",
      "webpack-cli": "^5.1.4"
    },
    "dependencies": {
      "bootstrap": "^5.3.2",
      "aos": "^2.3.4",
      "swiper": "^10.3.1",
      "vanilla-lazyload": "^17.8.4"
    },
    "browserslist": [
      "> 1%",
      "last 2 versions",
      "not dead",
      "not ie 11"
    ],
    "postcss": {
      "plugins": {
        "postcss-import": {},
        "postcss-preset-env": {
          "stage": 1,
          "features": {
            "custom-properties": false
          }
        },
        "autoprefixer": {},
        "cssnano": {
          "preset": [
            "default",
            {
              "discardComments": {
                "removeAll": true
              }
            }
          ]
        }
      }
    },
    "stylelint": {
      "extends": [
        "stylelint-config-standard"
      ],
      "rules": {
        "indentation": 4,
        "string-quotes": "single",
        "no-duplicate-selectors": true,
        "color-hex-case": "lower",
        "color-hex-length": "short",
        "selector-combinator-space-after": "always",
        "selector-attribute-quotes": "always",
        "selector-attribute-operator-space-before": "never",
        "selector-attribute-operator-space-after": "never",
        "selector-attribute-brackets-space-inside": "never",
        "declaration-block-trailing-semicolon": "always",
        "declaration-colon-space-before": "never",
        "declaration-colon-space-after": "always",
        "number-leading-zero": "always",
        "function-url-quotes": "always",
        "font-family-name-quotes": "always-where-recommended",
        "comment-whitespace-inside": "always",
        "comment-empty-line-before": "always",
        "at-rule-no-unknown": [
          true,
          {
            "ignoreAtRules": [
              "extends",
              "apply",
              "variants",
              "responsive",
              "screen"
            ]
          }
        ],
        "declaration-block-trailing-semicolon": "always",
        "selector-class-pattern": "^[a-z]([a-z0-9-]+)?(__([a-z0-9]+-?)+)?(--([a-z0-9]+-?)+){0,2}$"
      }
    },
    "eslintConfig": {
      "env": {
        "browser": true,
        "es2021": true
      },
      "extends": [
        "eslint:recommended"
      ],
      "parserOptions": {
        "ecmaVersion": 12,
        "sourceType": "module"
      },
      "rules": {
        "indent": [
          "error",
          4
        ],
        "linebreak-style": [
          "error",
          "unix"
        ],
        "quotes": [
          "error",
          "single"
        ],
        "semi": [
          "error",
          "always"
        ],
        "no-unused-vars": "warn",
        "no-console": "warn",
        "prefer-const": "error",
        "no-var": "error"
      }
    },
    "jest": {
      "testEnvironment": "jsdom",
      "setupFilesAfterEnv": [
        "<rootDir>/tests/setup.js"
      ],
      "testMatch": [
        "<rootDir>/tests/**/*.test.js"
      ],
      "collectCoverageFrom": [
        "js/**/*.js",
        "!js/vendor/**"
      ]
    },
    "husky": {
      "hooks": {
        "pre-commit": "npm run precommit",
        "pre-push": "npm test"
      }
    }
  }